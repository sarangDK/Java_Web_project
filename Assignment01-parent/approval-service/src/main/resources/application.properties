spring.application.name=approval-service
approval-service.version=1.0.0

server.port=8044

#Mongodb database properties
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=approval-service
spring.data.mongodb.username=admin
spring.data.mongodb.password=password
spring.data.mongodb.authentication-database=admin

event.service.url=http://localhost:8042
user.service.url=http://locahost:8092


# Swagger Document
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

# Resilience4J Endpoint
resilience4j.circuitbreaker.instances.event.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.event.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.event.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.event.slidingWindowSize=10
resilience4j.circuitbreaker.instances.event.failureRateThreshold=50
resilience4j.circuitbreaker.instances.event.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.event.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.event.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.event.minimum-number-of-calls=5

# Resilience4J Timeout Properties
resilience4j.timelimiter.instances.event.timeout-duration=3s

# Resilience4J Retry Properties
resilience4j.retry.instances.event.max-attempts=3
resilience4j.retry.instances.event.wait-duration=2s

# Metrics Configuration
management.endpoints.web.exposure.include=prometheus
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=approval-service

# Role assign
spring.security.oauth2.client.registration.keycloak.client-id=spring-client-credentials-id
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/spring-microservices-security-realm

# Spring Security OAuth2 Resource Server Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/spring-microservices-security-realm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/spring-microservices-security-realm/protocol/openid-connect/certs


# JWT Auth Converter Configuration
jwt.auth.converter.resource-id=minh
jwt.auth.converter.principle-attribute=preferred_username